### 1 Администратор имеет возможность добавлять новые программы
POST http://localhost:8080/programmes
Content-Type: application/x-www-form-urlencoded

name = fitness
duration = 11.11.2021
level_of_training = 0

> {%
client.test("Администратор имеет возможность добавлять новые программы", function (){
    client.assert(response.status === 200, "Ожидается код '200'. Был получен код '" + response.status + "'.");
    client.assert(response.body === "Прекрасная программа, продолжай в том же духе!", "Ожидалось 'Прекрасная программа, " +
        "продолжай в том же духе!'. Было получено '" + response.body + "'.");
});
 %}

###2 Админ смотрит окончание льгот
GET http://localhost:8060/pass?customer_id=3

> {%
 client.test("Администратор имеет возможность отслеживать срок окончания действия льгот у пользователей", function (){
     client.assert(response.status === 200, "Ожидается код '200'. Был получен код '" + response.status + "'.");
     client.assert(response.contentType.mimeType === "application/json", "Ожидаю application/type. Фактически: " +
     response.contentType.mimeType);
     client.assert(response.body.hasOwnProperty("length") && response.body.length === 1, "В ответе есть один элемент");
     client.assert(response.body[0]['pass_id'] === 3, "id льготы некорректен");
     client.assert(response.body[0]['duration'] === "06.05.2021 - 06.05.2023", "Срок льготы некорректен");
     client.assert(response.body[0]['discount'] === "10%", "Скидка льготы некорректна");
     client.assert(response.body[0]['customer'] !== undefined, "Нет данных о клиенте");
     client.assert(response.body[0]['customer']['customer_id'] === 3, "id клиента некорректен");
     client.assert(response.body[0]['customer']['full_name'] === "Иванова Екатерина Александровна", "ФИО клиента некорректно");
     client.assert(response.body[0]['customer']['sex'] === "ж", "Пол клиента некорректен");
     client.assert(response.body[0]['customer']['birthdate'] === "15.10.1970", "День рождения клиента некорректно");
     client.assert(response.body[0]['customer']['phone'] === "+79503287247", "Номер клиента некорректен");
     client.assert(response.body[0]['customer']['passport'] === "20 33 249846", "Паспорт клиента некорректен");
 });
 %}



### 3 Клиент может узнать уровень сложности программ
GET http://localhost:8080/programmes?programme_id=1

> {%
 client.test("Клиент может узнать уровень сложности программ", function (){
     client.assert(response.status === 200, "Ожидается код '200'. Был получен код '" + response.status + "'.");
     client.assert(response.contentType.mimeType === "application/json", "Ожидаю application/type. Фактически: " +
     response.contentType.mimeType);
     client.assert(response.body.hasOwnProperty("length") && response.body.length === 1, "В ответе есть один элемент");
     client.assert(response.body[0]['id_programme'] === 1, "id программы некорректен");
     client.assert(response.body[0]['name'] === "Суставная гимнастика", "Наименование программы некорректно");
     client.assert(response.body[0]['duration'] === "1 час", "Длительность программы некорректен");
     client.assert(response.body[0]['discount'] === 10, "Уровень подготовки программы некорректен");
 });
 %}

### 4 Клиент смотрит окончание абонемента
GET http://localhost:8060/pass?pass_id=5

> {%
 client.test("Клиент имеет возможность отслеживать срок окончания действия своего абонемента", function (){
     client.assert(response.status === 200, "Ожидается код '200'. Был получен код '" + response.status + "'.");
     client.assert(response.contentType.mimeType === "application/json", "Ожидаю application/type. Фактически: " +
     response.contentType.mimeType);
     client.assert(response.body.hasOwnProperty("length") && response.body.length === 1, "В ответе есть один элемент");
     client.assert(response.body[0]['pass_id'] === 3, "id абонемента некорректен");
     client.assert(response.body[0]['duration'] === "06.05.2021 - 06.05.2023", "Срок действия абонемента некорректен");
     client.assert(response.body[0]['customer_id'] === 3, "id клиента некорректна");
 });
 %}

### 5 Менеджер может узнать общую стоимость покупаемых клиентом программ
GET http://localhost:8080/purchased_items?customer_id=1

> {%
client.test("Менеджер может узнать общую стоимость покупаемых клиентом программ", function (){
  client.assert(response.status === 200, "Ожидается код '200'. Был получен код '" + response.status + "'.");
  client.assert(response.body === "8500", "Ожидалось '8500'. Было получено '" + response.body + "'.");
});
 %}

